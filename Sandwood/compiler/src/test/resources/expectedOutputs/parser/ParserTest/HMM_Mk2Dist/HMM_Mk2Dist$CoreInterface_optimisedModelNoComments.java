package org.sandwood.compiler.tests.parser;

interface HMM_Mk2Dist$CoreInterface extends org.sandwood.runtime.internal.model.CoreModel {
	public double[][] get$bias();
	public void set$bias(double[][] cv$value);
	public int[][] get$events();
	public void set$events(int[][] cv$value);
	public int[][] get$eventsMeasured();
	public void set$eventsMeasured(int[][] cv$value);
	public boolean get$fixedFlag$sample103();
	public void set$fixedFlag$sample103(boolean cv$value);
	public boolean get$fixedFlag$sample26();
	public void set$fixedFlag$sample26(boolean cv$value);
	public boolean get$fixedFlag$sample34();
	public void set$fixedFlag$sample34(boolean cv$value);
	public boolean get$fixedFlag$sample51();
	public void set$fixedFlag$sample51(boolean cv$value);
	public boolean get$fixedFlag$sample53();
	public void set$fixedFlag$sample53(boolean cv$value);
	public boolean get$fixedFlag$sample61();
	public void set$fixedFlag$sample61(boolean cv$value);
	public boolean get$fixedFlag$sample81();
	public void set$fixedFlag$sample81(boolean cv$value);
	public int get$initialState();
	public void set$initialState(int cv$value);
	public int[] get$length$eventsMeasured();
	public void set$length$eventsMeasured(int[] cv$value);
	public double get$logProbability$bias();
	public double get$logProbability$events();
	public double get$logProbability$initialState();
	public double get$logProbability$m();
	public double get$logProbability$st();
	public double get$logProbability$weights();
	public double[][] get$m();
	public void set$m(double[][] cv$value);
	public int get$noEvents();
	public void set$noEvents(int cv$value);
	public int get$noStates();
	public void set$noStates(int cv$value);
	public int get$samples();
	public int[][] get$st();
	public void set$st(int[][] cv$value);
	public double[] get$v();
	public double[] get$v2();
	public double[] get$weights();
	public void set$weights(double[] cv$value);
	public void logEvidenceGeneration();
}