Tasks: [ task1, type: Constant Int, scope: task0, input [], output [var1], Sandwood Code: int var1 = 2; ], [ task2, type: Constant Boolean, scope: task0, input [], output [var2], Sandwood Code: boolean var2 = false; ], [ task3, type: Constant Int, scope: task0, input [], output [var3], Sandwood Code: int var3 = 100; ], [ task4, type: Array Constructor, scope: task0, input [var3], output [var4], Sandwood Code: boolean[] var4 = new boolean[var3]; ], [ task5, type: Constant Int, scope: task0, input [], output [var5], Sandwood Code: int var5 = 0; ], [ task6, type: Constant Int, scope: task0, input [], output [var6], Sandwood Code: int var6 = 1; ], [ task7, type: Parallel for, scope: task0, input [var5, var3, var6], output [var7], Sandwood Code: for(int var7=var5; var7 < var3; var7 += var6) { ], [ task8, type: Put, scope: task7, input [var4, var7, var2], output [var8], Sandwood Code: var4[var7] = var2; ], [ task9, type: Constant Double, scope: task0, input [], output [var9], Sandwood Code: double var9 = 0.1; ], [ task10, type: Array Constructor, scope: task0, input [var1], output [var10], Sandwood Code: double[] var10 = new double[var1]; ], [ task11, type: Constant Int, scope: task0, input [], output [var11], Sandwood Code: int var11 = 0; ], [ task12, type: Constant Int, scope: task0, input [], output [var12], Sandwood Code: int var12 = 1; ], [ task13, type: Parallel for, scope: task0, input [var11, var1, var12], output [var13], Sandwood Code: for(int var13=var11; var13 < var1; var13 += var12) { ], [ task14, type: Put, scope: task13, input [var10, var13, var9], output [var14], Sandwood Code: var10[var13] = var9; ], [ task15, type: Dirichlet, scope: task0, input [var14], output [var15], Sandwood Code: Dirichlet var15 = new Dirichlet(var10); ], [ task16, type: Array Constructor, scope: task0, input [var1], output [var16], Sandwood Code: double[][] var16 = new double[var1][]; ], [ task17, type: Constant Int, scope: task0, input [], output [var17], Sandwood Code: int var17 = 0; ], [ task18, type: Constant Int, scope: task0, input [], output [var18], Sandwood Code: int var18 = 1; ], [ task19, type: Parallel for, scope: task0, input [var17, var1, var18], output [var19], Sandwood Code: for(int var19=var17; var19 < var1; var19 += var18) { ], [ task20, type: Sample, scope: task19, input [var15], output [var20], Sandwood Code: double[] var20 = var15.sample(); ], [ task21, type: Put, scope: task19, input [var16, var19, var20], output [var21], Sandwood Code: var16[var19] = var20; ], [ task23, type: Constant Double, scope: task0, input [], output [var22], Sandwood Code: double var22 = 1.0; ], [ task24, type: Constant Double, scope: task0, input [], output [var23], Sandwood Code: double var23 = 1.0; ], [ task25, type: Beta, scope: task0, input [var22, var23], output [var24], Sandwood Code: Beta var24 = new Beta(var22, var23); ], [ task26, type: Array Constructor, scope: task0, input [var1], output [var25], Sandwood Code: double[] var25 = new double[var1]; ], [ task27, type: Constant Int, scope: task0, input [], output [var26], Sandwood Code: int var26 = 0; ], [ task28, type: Constant Int, scope: task0, input [], output [var27], Sandwood Code: int var27 = 1; ], [ task29, type: Parallel for, scope: task0, input [var26, var1, var27], output [var28], Sandwood Code: for(int var28=var26; var28 < var1; var28 += var27) { ], [ task30, type: Sample, scope: task29, input [var24], output [var29], Sandwood Code: double var29 = var24.sample(); ], [ task31, type: Put, scope: task29, input [var25, var28, var29], output [var30], Sandwood Code: var25[var28] = var29; ], [ task32, type: Length, scope: task0, input [var8], output [var31], Sandwood Code: int var31 = var4.length; ], [ task33, type: Constant Int, scope: task0, input [], output [var32], Sandwood Code: int var32 = 0; ], [ task34, type: Array Constructor, scope: task0, input [var31], output [var33], Sandwood Code: int[] var33 = new int[var31]; ], [ task35, type: Constant Int, scope: task0, input [], output [var34], Sandwood Code: int var34 = 0; ], [ task36, type: Constant Int, scope: task0, input [], output [var35], Sandwood Code: int var35 = 1; ], [ task37, type: Parallel for, scope: task0, input [var34, var31, var35], output [var36], Sandwood Code: for(int var36=var34; var36 < var31; var36 += var35) { ], [ task38, type: Put, scope: task37, input [var33, var36, var32], output [var37], Sandwood Code: var33[var36] = var32; ], [ task39, type: Length, scope: task0, input [var8], output [var38], Sandwood Code: int var38 = var4.length; ], [ task40, type: Array Constructor, scope: task0, input [var38], output [var39], Sandwood Code: boolean[] var39 = new boolean[var38]; ], [ task41, type: Constant Int, scope: task0, input [], output [var40], Sandwood Code: int var40 = 0; ], [ task42, type: Get, scope: task0, input [var37, var40], output [var41], Sandwood Code: int var41 = var33[var40]; ], [ task43, type: Get, scope: task0, input [var21, var41], output [var42], Sandwood Code: double[] var42 = var16[var41]; ], [ task44, type: Categorical, scope: task0, input [var42], output [var43], Sandwood Code: Categorical var43 = new Categorical(var42); ], [ task45, type: Sample, scope: task0, input [var43], output [var44], Sandwood Code: int var44 = var43.sample(); ], [ task46, type: Constant Int, scope: task0, input [], output [var45], Sandwood Code: int var45 = 0; ], [ task47, type: Put, scope: task0, input [var37, var45, var44], output [var46], Sandwood Code: var33[var45] = var44; ], [ task48, type: Constant Int, scope: task0, input [], output [var47], Sandwood Code: int var47 = 1; ], [ task49, type: Length, scope: task0, input [var8], output [var48], Sandwood Code: int var48 = var4.length; ], [ task50, type: Constant Int, scope: task0, input [], output [var49], Sandwood Code: int var49 = 1; ], [ task51, type: Parallel for, scope: task0, input [var47, var48, var49], output [var50], Sandwood Code: for(int var50=var47; var50 < var48; var50 += var49) { ], [ task52, type: Constant Int, scope: task51, input [], output [var51], Sandwood Code: int var51 = 1; ], [ task53, type: Subtraction, scope: task51, input [var50, var51], output [var52], Sandwood Code: int var52 = (var50 - var51); ], [ task54, type: Get, scope: task51, input [var46, var52], output [var53], Sandwood Code: int var53 = var33[var52]; ], [ task55, type: Get, scope: task51, input [var21, var53], output [var54], Sandwood Code: double[] var54 = var16[var53]; ], [ task56, type: Categorical, scope: task51, input [var54], output [var55], Sandwood Code: Categorical var55 = new Categorical(var54); ], [ task57, type: Sample, scope: task51, input [var55], output [var56], Sandwood Code: int var56 = var55.sample(); ], [ task58, type: Put, scope: task51, input [var46, var50, var56], output [var57], Sandwood Code: var33[var50] = var56; ], [ task59, type: Constant Int, scope: task0, input [], output [var58], Sandwood Code: int var58 = 1; ], [ task60, type: Length, scope: task0, input [var8], output [var59], Sandwood Code: int var59 = var4.length; ], [ task61, type: Constant Int, scope: task0, input [], output [var60], Sandwood Code: int var60 = 1; ], [ task62, type: Parallel for, scope: task0, input [var58, var59, var60], output [var61], Sandwood Code: for(int var61=var58; var61 < var59; var61 += var60) { ], [ task63, type: Get, scope: task62, input [var57, var61], output [var62], Sandwood Code: int var62 = var33[var61]; ], [ task64, type: Get, scope: task62, input [var30, var62], output [var63], Sandwood Code: double var63 = var25[var62]; ], [ task65, type: Bernoulli, scope: task62, input [var63], output [var64], Sandwood Code: Bernoulli var64 = new Bernoulli(var63); ], [ task66, type: Sample, scope: task62, input [var64], output [var65], Sandwood Code: boolean var65 = var64.sample(); ], [ task67, type: Put, scope: task62, input [var39, var61, var65], output [var66], Sandwood Code: var39[var61] = var65; ], [ task68, type: Observation variable, scope: task0, input [var66, var8], output [], Sandwood Code: var39.observe(var4); ], Variables: [ var1, type: int, handle var1, parent: task1, alias: null, comment: null, scope: task0 ], [ var2, type: boolean, handle var2, parent: task2, alias: null, comment: null, scope: task0 ], [ var3, type: int, handle var3, parent: task3, alias: null, comment: null, scope: task0 ], [ var4, type: boolean[], handle var4, parent: task4, alias: null, comment: null, scope: task0 ], [ var5, type: int, handle var5, parent: task5, alias: null, comment: null, scope: task0 ], [ var6, type: int, handle var6, parent: task6, alias: null, comment: null, scope: task0 ], [ var7, type: int, handle var7, parent: task7, alias: null, comment: null, scope: task7 ], [ var8, type: boolean[], handle var4, parent: task8, alias: null, comment: null, scope: task0 ], [ var9, type: double, handle var9, parent: task9, alias: null, comment: null, scope: task0 ], [ var10, type: double[], handle var10, parent: task10, alias: null, comment: null, scope: task0 ], [ var11, type: int, handle var11, parent: task11, alias: null, comment: null, scope: task0 ], [ var12, type: int, handle var12, parent: task12, alias: null, comment: null, scope: task0 ], [ var13, type: int, handle var13, parent: task13, alias: null, comment: null, scope: task13 ], [ var14, type: double[], handle var10, parent: task14, alias: null, comment: null, scope: task0 ], [ var15, type: Dirichlet, handle var15, parent: task15, alias: null, comment: null, scope: task0 ], [ var16, type: double[][], handle var16, parent: task16, alias: null, comment: null, scope: task0 ], [ var17, type: int, handle var17, parent: task17, alias: null, comment: null, scope: task0 ], [ var18, type: int, handle var18, parent: task18, alias: null, comment: null, scope: task0 ], [ var19, type: int, handle var19, parent: task19, alias: null, comment: null, scope: task19 ], [ var20, type: double[], handle var20, parent: task20, alias: null, comment: null, scope: task19 ], [ var21, type: double[][], handle var16, parent: task21, alias: null, comment: null, scope: task0 ], [ var22, type: double, handle var22, parent: task23, alias: null, comment: null, scope: task0 ], [ var23, type: double, handle var23, parent: task24, alias: null, comment: null, scope: task0 ], [ var24, type: Beta, handle var24, parent: task25, alias: null, comment: null, scope: task0 ], [ var25, type: double[], handle var25, parent: task26, alias: null, comment: null, scope: task0 ], [ var26, type: int, handle var26, parent: task27, alias: null, comment: null, scope: task0 ], [ var27, type: int, handle var27, parent: task28, alias: null, comment: null, scope: task0 ], [ var28, type: int, handle var28, parent: task29, alias: null, comment: null, scope: task29 ], [ var29, type: double, handle var29, parent: task30, alias: null, comment: null, scope: task29 ], [ var30, type: double[], handle var25, parent: task31, alias: null, comment: null, scope: task0 ], [ var31, type: int, handle var31, parent: task32, alias: null, comment: null, scope: task0 ], [ var32, type: int, handle var32, parent: task33, alias: null, comment: null, scope: task0 ], [ var33, type: int[], handle var33, parent: task34, alias: null, comment: null, scope: task0 ], [ var34, type: int, handle var34, parent: task35, alias: null, comment: null, scope: task0 ], [ var35, type: int, handle var35, parent: task36, alias: null, comment: null, scope: task0 ], [ var36, type: int, handle var36, parent: task37, alias: null, comment: null, scope: task37 ], [ var37, type: int[], handle var33, parent: task38, alias: null, comment: null, scope: task0 ], [ var38, type: int, handle var38, parent: task39, alias: null, comment: null, scope: task0 ], [ var39, type: boolean[], handle var39, parent: task40, alias: null, comment: null, scope: task0, constraint: var68 ], [ var40, type: int, handle var40, parent: task41, alias: null, comment: null, scope: task0 ], [ var41, type: int, handle var41, parent: task42, alias: null, comment: null, scope: task0 ], [ var42, type: double[], handle var42, parent: task43, alias: null, comment: null, scope: task0 ], [ var43, type: Categorical, handle var43, parent: task44, alias: null, comment: null, scope: task0 ], [ var44, type: int, handle var44, parent: task45, alias: null, comment: null, scope: task0 ], [ var45, type: int, handle var45, parent: task46, alias: null, comment: null, scope: task0 ], [ var46, type: int[], handle var33, parent: task47, alias: null, comment: null, scope: task0 ], [ var47, type: int, handle var47, parent: task48, alias: null, comment: null, scope: task0 ], [ var48, type: int, handle var48, parent: task49, alias: null, comment: null, scope: task0 ], [ var49, type: int, handle var49, parent: task50, alias: null, comment: null, scope: task0 ], [ var50, type: int, handle var50, parent: task51, alias: null, comment: null, scope: task51 ], [ var51, type: int, handle var51, parent: task52, alias: null, comment: null, scope: task51 ], [ var52, type: int, handle var52, parent: task53, alias: null, comment: null, scope: task51 ], [ var53, type: int, handle var53, parent: task54, alias: null, comment: null, scope: task51 ], [ var54, type: double[], handle var54, parent: task55, alias: null, comment: null, scope: task51 ], [ var55, type: Categorical, handle var55, parent: task56, alias: null, comment: null, scope: task51 ], [ var56, type: int, handle var56, parent: task57, alias: null, comment: null, scope: task51 ], [ var57, type: int[], handle var33, parent: task58, alias: null, comment: null, scope: task0 ], [ var58, type: int, handle var58, parent: task59, alias: null, comment: null, scope: task0 ], [ var59, type: int, handle var59, parent: task60, alias: null, comment: null, scope: task0 ], [ var60, type: int, handle var60, parent: task61, alias: null, comment: null, scope: task0 ], [ var61, type: int, handle var61, parent: task62, alias: null, comment: null, scope: task62 ], [ var62, type: int, handle var62, parent: task63, alias: null, comment: null, scope: task62 ], [ var63, type: double, handle var63, parent: task64, alias: null, comment: null, scope: task62 ], [ var64, type: Bernoulli, handle var64, parent: task65, alias: null, comment: null, scope: task62 ], [ var65, type: boolean, handle var65, parent: task66, alias: null, comment: null, scope: task62 ], [ var66, type: boolean[], handle var39, parent: task67, alias: null, comment: null, scope: task0 ], 